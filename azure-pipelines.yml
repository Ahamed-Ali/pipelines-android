# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

pool:
  vmImage: 'macos-latest'

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      #!/usr/bin/env bash

      # Install AVD files
      echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'

      # Create emulator
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-27;google_apis;x86' --force

      $ANDROID_HOME/emulator/emulator -list-avds

      echo "Starting emulator"

      # Start emulator in background
      nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      $ANDROID_HOME/platform-tools/adb devices

      echo "Emulator started"
  displayName: 'Install and Start Android Emulator'
  
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.205'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: dotnet new maui -n SampleMauiApp
  displayName: 'Create a new Maui project'

- script: dotnet build SampleMauiApp/SampleMauiApp.csproj
  displayName: 'Build Maui project'

- script: dotnet run --project SampleMauiApp/SampleMauiApp.csproj --emulator xamarin_android_emulator
  displayName: 'Run Maui project on emulator'